
apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.github.johnrengelman.shadow'

sourceSets {
    main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
    main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpc"
}

group 'com.migafgarcia'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'Bot'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.javacord:javacord:3.0.0'
    runtimeOnly 'org.apache.logging.log4j:log4j-core:2.11.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.grpc:grpc-netty-shaded:1.15.1'
    implementation 'io.grpc:grpc-protobuf:1.15.1'
    implementation 'io.grpc:grpc-stub:1.15.1'
    implementation "com.google.protobuf:protobuf-lite:3.0.1"
    implementation 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'
}



protobuf {
    protoc {
        if (project.hasProperty('protoc')) {

            path = project.protoc

            } else {

            artifact = "com.google.protobuf:protoc:3.6.1"
        }
        path = '/usr/bin/protoc'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.15.1'
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite {}
                grpc {
                    option 'lite'
                }
            }
        }
    }
}
